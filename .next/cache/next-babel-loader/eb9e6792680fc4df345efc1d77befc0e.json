{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport ChannelGrid from \"../components/ChannelGrid\";\nimport PodcastList from \"../components/PodcastList\";\nimport PodcastListWithClick from \"../components/PodcastListWithClick\";\nimport PodcastPlayer from \"../components/PodcastPlayer\";\nimport Error from \"./_error\";\nexport default class channel extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"openPodcast\", (event, podcast) => {\n      event.preventDefault();\n      this.setState({\n        openPodcast: podcast\n      });\n    });\n\n    this.state = {\n      openPodcast: null\n    };\n  }\n\n  static async getInitialProps({\n    query,\n    res\n  }) {\n    let idChannel = query.id;\n\n    try {\n      let [reqChannel, reqSeries, reqAudios] = await _Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)]);\n\n      if (reqChannel.status >= 400) {\n        res.statusCode = reqChannel.status;\n        return {\n          channel: null,\n          audioClips: null,\n          series: null,\n          statusCode: reqChannel.status\n        };\n      }\n\n      let dataChannel = await reqChannel.json();\n      let channel = dataChannel.body.channel;\n      let dataAudios = await reqAudios.json();\n      let audioClips = dataAudios.body.audio_clips;\n      let dataSeries = await reqSeries.json();\n      let series = dataSeries.body.channels;\n      return {\n        channel,\n        audioClips,\n        series,\n        statusCode: 200\n      };\n    } catch (e) {\n      return {\n        channel: null,\n        audioClips: null,\n        series: null,\n        statusCode: 503\n      };\n    } // let reqChannel = await fetch(\n    //   `https://api.audioboom.com/channels/${idChannel}`\n    // );\n    // let dataChannel = await reqChannel.json();\n    // let channel = dataChannel.body.channel;\n    // let reqAudios = await fetch(\n    //   `https://api.audioboom.com/channels/${idChannel}/audio_clips`\n    // );\n    // let dataAudios = await reqAudios.json();\n    // let audioClips = dataAudios.body.audio_clips;\n    // let reqSeries = await fetch(\n    //   `https://api.audioboom.com/channels/${idChannel}/child_channels`\n    // );\n    // let dataSeries = await reqSeries.json();\n    // let series = dataSeries.body.channels;\n\n  }\n\n  render() {\n    const {\n      channel,\n      audioClips,\n      series,\n      statusCode\n    } = this.props;\n    const {\n      openPodcast\n    } = this.state;\n\n    if (statusCode !== 200) {\n      return __jsx(Error, {\n        statusCode: statusCode\n      });\n    }\n\n    return __jsx(Layout, {\n      title: channel.title\n    }, openPodcast && __jsx(\"div\", {\n      className: \"jsx-4293086336\" + \" \" + \"modal\"\n    }, \"Hay un podcast abierto\"), __jsx(\"h1\", {\n      className: \"jsx-4293086336\"\n    }, channel.title), series.length > 0 && __jsx(\"div\", {\n      className: \"jsx-4293086336\"\n    }, __jsx(\"h2\", {\n      className: \"jsx-4293086336\"\n    }, \"Series\"), __jsx(ChannelGrid, {\n      channels: series\n    })), __jsx(\"h2\", {\n      className: \"jsx-4293086336\"\n    }, \"Ultimos Podcasts\"), __jsx(PodcastListWithClick, {\n      podcasts: audioClips,\n      onClickPodcast: this.openPodcast\n    }), __jsx(_JSXStyle, {\n      id: \"4293086336\"\n    }, \"h2.jsx-4293086336{padding:5px;font-size:0.9em;font-weight:600;margin:0;text-align:center;}.modal.jsx-4293086336{position:fixed;top:0;left:0;right:0;bottom:0;z-index:99999;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iYXV0aXN0YS9EZXNrdG9wL1BsYXR6aS9DYXJyZXJhLWRlLXJlYWN0L25leHQtanMvcGFnZXMvY2hhbm5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvR29CLEFBR3lCLEFBT0csWUFOQyxHQU9WLE1BQ0MsT0FQUyxBQVFSLFFBQ0MsUUFSQSxDQVNLLFFBUkksTUFTcEIsWUFSQSIsImZpbGUiOiIvVXNlcnMvYmF1dGlzdGEvRGVza3RvcC9QbGF0emkvQ2FycmVyYS1kZS1yZWFjdC9uZXh0LWpzL3BhZ2VzL2NoYW5uZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgTGF5b3V0IGZyb20gXCIuLi9jb21wb25lbnRzL0xheW91dFwiO1xuaW1wb3J0IENoYW5uZWxHcmlkIGZyb20gXCIuLi9jb21wb25lbnRzL0NoYW5uZWxHcmlkXCI7XG5pbXBvcnQgUG9kY2FzdExpc3QgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9kY2FzdExpc3RcIjtcbmltcG9ydCBQb2RjYXN0TGlzdFdpdGhDbGljayBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb2RjYXN0TGlzdFdpdGhDbGlja1wiO1xuaW1wb3J0IFBvZGNhc3RQbGF5ZXIgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9kY2FzdFBsYXllclwiO1xuaW1wb3J0IEVycm9yIGZyb20gXCIuL19lcnJvclwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBjaGFubmVsIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHsgb3BlblBvZGNhc3Q6IG51bGwgfTtcbiAgfVxuXG4gIHN0YXRpYyBhc3luYyBnZXRJbml0aWFsUHJvcHMoeyBxdWVyeSwgcmVzIH0pIHtcbiAgICBsZXQgaWRDaGFubmVsID0gcXVlcnkuaWQ7XG4gICAgdHJ5IHtcbiAgICAgIGxldCBbcmVxQ2hhbm5lbCwgcmVxU2VyaWVzLCByZXFBdWRpb3NdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH1gKSxcbiAgICAgICAgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9L2NoaWxkX2NoYW5uZWxzYCksXG4gICAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9hdWRpb19jbGlwc2ApXG4gICAgICBdKTtcblxuICAgICAgaWYgKHJlcUNoYW5uZWwuc3RhdHVzID49IDQwMCkge1xuICAgICAgICByZXMuc3RhdHVzQ29kZSA9IHJlcUNoYW5uZWwuc3RhdHVzO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGNoYW5uZWw6IG51bGwsXG4gICAgICAgICAgYXVkaW9DbGlwczogbnVsbCxcbiAgICAgICAgICBzZXJpZXM6IG51bGwsXG4gICAgICAgICAgc3RhdHVzQ29kZTogcmVxQ2hhbm5lbC5zdGF0dXNcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgbGV0IGRhdGFDaGFubmVsID0gYXdhaXQgcmVxQ2hhbm5lbC5qc29uKCk7XG4gICAgICBsZXQgY2hhbm5lbCA9IGRhdGFDaGFubmVsLmJvZHkuY2hhbm5lbDtcblxuICAgICAgbGV0IGRhdGFBdWRpb3MgPSBhd2FpdCByZXFBdWRpb3MuanNvbigpO1xuICAgICAgbGV0IGF1ZGlvQ2xpcHMgPSBkYXRhQXVkaW9zLmJvZHkuYXVkaW9fY2xpcHM7XG5cbiAgICAgIGxldCBkYXRhU2VyaWVzID0gYXdhaXQgcmVxU2VyaWVzLmpzb24oKTtcbiAgICAgIGxldCBzZXJpZXMgPSBkYXRhU2VyaWVzLmJvZHkuY2hhbm5lbHM7XG5cbiAgICAgIHJldHVybiB7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcywgc3RhdHVzQ29kZTogMjAwIH07XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgY2hhbm5lbDogbnVsbCxcbiAgICAgICAgYXVkaW9DbGlwczogbnVsbCxcbiAgICAgICAgc2VyaWVzOiBudWxsLFxuICAgICAgICBzdGF0dXNDb2RlOiA1MDNcbiAgICAgIH07XG4gICAgfVxuICAgIC8vIGxldCByZXFDaGFubmVsID0gYXdhaXQgZmV0Y2goXG4gICAgLy8gICBgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH1gXG4gICAgLy8gKTtcbiAgICAvLyBsZXQgZGF0YUNoYW5uZWwgPSBhd2FpdCByZXFDaGFubmVsLmpzb24oKTtcbiAgICAvLyBsZXQgY2hhbm5lbCA9IGRhdGFDaGFubmVsLmJvZHkuY2hhbm5lbDtcbiAgICAvLyBsZXQgcmVxQXVkaW9zID0gYXdhaXQgZmV0Y2goXG4gICAgLy8gICBgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vYXVkaW9fY2xpcHNgXG4gICAgLy8gKTtcbiAgICAvLyBsZXQgZGF0YUF1ZGlvcyA9IGF3YWl0IHJlcUF1ZGlvcy5qc29uKCk7XG4gICAgLy8gbGV0IGF1ZGlvQ2xpcHMgPSBkYXRhQXVkaW9zLmJvZHkuYXVkaW9fY2xpcHM7XG4gICAgLy8gbGV0IHJlcVNlcmllcyA9IGF3YWl0IGZldGNoKFxuICAgIC8vICAgYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9L2NoaWxkX2NoYW5uZWxzYFxuICAgIC8vICk7XG4gICAgLy8gbGV0IGRhdGFTZXJpZXMgPSBhd2FpdCByZXFTZXJpZXMuanNvbigpO1xuICAgIC8vIGxldCBzZXJpZXMgPSBkYXRhU2VyaWVzLmJvZHkuY2hhbm5lbHM7XG4gIH1cblxuICBvcGVuUG9kY2FzdCA9IChldmVudCwgcG9kY2FzdCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IG9wZW5Qb2RjYXN0OiBwb2RjYXN0IH0pO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcywgc3RhdHVzQ29kZSB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IG9wZW5Qb2RjYXN0IH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgaWYgKHN0YXR1c0NvZGUgIT09IDIwMCkge1xuICAgICAgcmV0dXJuIDxFcnJvciBzdGF0dXNDb2RlPXtzdGF0dXNDb2RlfSAvPjtcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgPExheW91dCB0aXRsZT17Y2hhbm5lbC50aXRsZX0+XG4gICAgICAgIHtvcGVuUG9kY2FzdCAmJiA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsXCI+SGF5IHVuIHBvZGNhc3QgYWJpZXJ0bzwvZGl2Pn1cbiAgICAgICAgPGgxPntjaGFubmVsLnRpdGxlfTwvaDE+XG5cbiAgICAgICAge3Nlcmllcy5sZW5ndGggPiAwICYmIChcbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPGgyPlNlcmllczwvaDI+XG4gICAgICAgICAgICA8Q2hhbm5lbEdyaWQgY2hhbm5lbHM9e3Nlcmllc30gLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cblxuICAgICAgICA8aDI+VWx0aW1vcyBQb2RjYXN0czwvaDI+XG4gICAgICAgIHsvKiA8UG9kY2FzdExpc3QgYXVkaW9DbGlwcz17YXVkaW9DbGlwc30gLz4gKi99XG4gICAgICAgIDxQb2RjYXN0TGlzdFdpdGhDbGlja1xuICAgICAgICAgIHBvZGNhc3RzPXthdWRpb0NsaXBzfVxuICAgICAgICAgIG9uQ2xpY2tQb2RjYXN0PXt0aGlzLm9wZW5Qb2RjYXN0fVxuICAgICAgICAvPlxuXG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICBoMiB7XG4gICAgICAgICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICAgICAgICBmb250LXNpemU6IDAuOWVtO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICB9XG4gICAgICAgICAgLm1vZGFsIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICByaWdodDogMDtcbiAgICAgICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgICAgIHotaW5kZXg6IDk5OTk5O1xuICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgICAgPC9MYXlvdXQ+XG4gICAgKTtcbiAgfVxufVxuIl19 */\\n/*@ sourceURL=/Users/bautista/Desktop/Platzi/Carrera-de-react/next-js/pages/channel.js */\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/bautista/Desktop/Platzi/Carrera-de-react/next-js/pages/channel.js"],"names":["React","Component","Layout","ChannelGrid","PodcastList","PodcastListWithClick","PodcastPlayer","Error","channel","constructor","props","event","podcast","preventDefault","setState","openPodcast","state","getInitialProps","query","res","idChannel","id","reqChannel","reqSeries","reqAudios","all","fetch","status","statusCode","audioClips","series","dataChannel","json","body","dataAudios","audio_clips","dataSeries","channels","e","render","title","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport ChannelGrid from \"../components/ChannelGrid\";\nimport PodcastList from \"../components/PodcastList\";\nimport PodcastListWithClick from \"../components/PodcastListWithClick\";\nimport PodcastPlayer from \"../components/PodcastPlayer\";\nimport Error from \"./_error\";\n\nexport default class channel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { openPodcast: null };\n  }\n\n  static async getInitialProps({ query, res }) {\n    let idChannel = query.id;\n    try {\n      let [reqChannel, reqSeries, reqAudios] = await Promise.all([\n        fetch(`https://api.audioboom.com/channels/${idChannel}`),\n        fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n        fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\n      ]);\n\n      if (reqChannel.status >= 400) {\n        res.statusCode = reqChannel.status;\n        return {\n          channel: null,\n          audioClips: null,\n          series: null,\n          statusCode: reqChannel.status\n        };\n      }\n\n      let dataChannel = await reqChannel.json();\n      let channel = dataChannel.body.channel;\n\n      let dataAudios = await reqAudios.json();\n      let audioClips = dataAudios.body.audio_clips;\n\n      let dataSeries = await reqSeries.json();\n      let series = dataSeries.body.channels;\n\n      return { channel, audioClips, series, statusCode: 200 };\n    } catch (e) {\n      return {\n        channel: null,\n        audioClips: null,\n        series: null,\n        statusCode: 503\n      };\n    }\n    // let reqChannel = await fetch(\n    //   `https://api.audioboom.com/channels/${idChannel}`\n    // );\n    // let dataChannel = await reqChannel.json();\n    // let channel = dataChannel.body.channel;\n    // let reqAudios = await fetch(\n    //   `https://api.audioboom.com/channels/${idChannel}/audio_clips`\n    // );\n    // let dataAudios = await reqAudios.json();\n    // let audioClips = dataAudios.body.audio_clips;\n    // let reqSeries = await fetch(\n    //   `https://api.audioboom.com/channels/${idChannel}/child_channels`\n    // );\n    // let dataSeries = await reqSeries.json();\n    // let series = dataSeries.body.channels;\n  }\n\n  openPodcast = (event, podcast) => {\n    event.preventDefault();\n    this.setState({ openPodcast: podcast });\n  };\n\n  render() {\n    const { channel, audioClips, series, statusCode } = this.props;\n    const { openPodcast } = this.state;\n\n    if (statusCode !== 200) {\n      return <Error statusCode={statusCode} />;\n    }\n\n    return (\n      <Layout title={channel.title}>\n        {openPodcast && <div className=\"modal\">Hay un podcast abierto</div>}\n        <h1>{channel.title}</h1>\n\n        {series.length > 0 && (\n          <div>\n            <h2>Series</h2>\n            <ChannelGrid channels={series} />\n          </div>\n        )}\n\n        <h2>Ultimos Podcasts</h2>\n        {/* <PodcastList audioClips={audioClips} /> */}\n        <PodcastListWithClick\n          podcasts={audioClips}\n          onClickPodcast={this.openPodcast}\n        />\n\n        <style jsx>{`\n          h2 {\n            padding: 5px;\n            font-size: 0.9em;\n            font-weight: 600;\n            margin: 0;\n            text-align: center;\n          }\n          .modal {\n            position: fixed;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            z-index: 99999;\n          }\n        `}</style>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}