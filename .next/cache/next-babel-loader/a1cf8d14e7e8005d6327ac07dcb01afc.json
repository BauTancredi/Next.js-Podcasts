{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bautista/Desktop/Platzi/Carrera-de-react/next-js/pages/channel.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout\";\nimport ChannelGrid from \"../components/ChannelGrid\";\nimport PodcastList from \"../components/PodcastList\";\n\nvar channel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(channel, _Component);\n\n  function channel() {\n    _classCallCheck(this, channel);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(channel).apply(this, arguments));\n  }\n\n  _createClass(channel, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          channel = _this$props.channel,\n          audioClips = _this$props.audioClips,\n          series = _this$props.series;\n      return __jsx(Layout, {\n        title: channel.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, channel.title), series.length > 0 && __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Series\"), __jsx(ChannelGrid, {\n        channels: series,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Ultimos Podcasts\"), __jsx(PodcastList, {\n        audioClips: audioClips,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var query, idChannel, _ref2, _ref3, reqChannel, reqSeries, reqAudios, dataChannel, channel, dataAudios, audioClips, dataSeries, series;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = _ref.query;\n              idChannel = query.id; // let reqChannel = await fetch(\n              //   `https://api.audioboom.com/channels/${idChannel}`\n              // );\n              // let dataChannel = await reqChannel.json();\n              // let channel = dataChannel.body.channel;\n              // let reqAudios = await fetch(\n              //   `https://api.audioboom.com/channels/${idChannel}/audio_clips`\n              // );\n              // let dataAudios = await reqAudios.json();\n              // let audioClips = dataAudios.body.audio_clips;\n              // let reqSeries = await fetch(\n              //   `https://api.audioboom.com/channels/${idChannel}/child_channels`\n              // );\n              // let dataSeries = await reqSeries.json();\n              // let series = dataSeries.body.channels;\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(_Promise.all([fetch(\"https://api.audioboom.com/channels/\".concat(idChannel)), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/child_channels\")), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/audio_clips\"))]));\n\n            case 4:\n              _ref2 = _context.sent;\n              _ref3 = _slicedToArray(_ref2, 3);\n              reqChannel = _ref3[0];\n              reqSeries = _ref3[1];\n              reqAudios = _ref3[2];\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(reqChannel.json());\n\n            case 11:\n              dataChannel = _context.sent;\n              channel = dataChannel.body.channel;\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(reqAudios.json());\n\n            case 15:\n              dataAudios = _context.sent;\n              audioClips = dataAudios.body.audio_clips;\n              _context.next = 19;\n              return _regeneratorRuntime.awrap(reqSeries.json());\n\n            case 19:\n              dataSeries = _context.sent;\n              series = dataSeries.body.channels;\n              return _context.abrupt(\"return\", {\n                channel: channel,\n                audioClips: audioClips,\n                series: series\n              });\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return channel;\n}(Component);\n\nexport { channel as default };","map":{"version":3,"sources":["/Users/bautista/Desktop/Platzi/Carrera-de-react/next-js/pages/channel.js"],"names":["React","Component","Link","Layout","ChannelGrid","PodcastList","channel","props","audioClips","series","title","length","query","idChannel","id","all","fetch","reqChannel","reqSeries","reqAudios","json","dataChannel","body","dataAudios","audio_clips","dataSeries","channels"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;IAEqBC,O;;;;;;;;;;;;;6BAqCV;AAAA,wBACiC,KAAKC,KADtC;AAAA,UACCD,OADD,eACCA,OADD;AAAA,UACUE,UADV,eACUA,UADV;AAAA,UACsBC,MADtB,eACsBA,MADtB;AAEP,aACE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAEH,OAAO,CAACI,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKJ,OAAO,CAACI,KAAb,CADF,EAEGD,MAAM,CAACE,MAAP,GAAgB,CAAhB,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,MAAC,WAAD;AAAa,QAAA,QAAQ,EAAEF,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAHJ,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BARF,EASE,MAAC,WAAD;AAAa,QAAA,UAAU,EAAED,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF;AAaD;;;;;;;;;;AAnD8BI,cAAAA,K,QAAAA,K;AACzBC,cAAAA,S,GAAYD,KAAK,CAACE,E,EAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;+CAE+C,SAAQC,GAAR,CAAY,CACzDC,KAAK,8CAAuCH,SAAvC,EADoD,EAEzDG,KAAK,8CAAuCH,SAAvC,qBAFoD,EAGzDG,KAAK,8CAAuCH,SAAvC,kBAHoD,CAAZ,C;;;;;AAA1CI,cAAAA,U;AAAYC,cAAAA,S;AAAWC,cAAAA,S;;+CAMJF,UAAU,CAACG,IAAX,E;;;AAApBC,cAAAA,W;AACAf,cAAAA,O,GAAUe,WAAW,CAACC,IAAZ,CAAiBhB,O;;+CAERa,SAAS,CAACC,IAAV,E;;;AAAnBG,cAAAA,U;AACAf,cAAAA,U,GAAae,UAAU,CAACD,IAAX,CAAgBE,W;;+CAEVN,SAAS,CAACE,IAAV,E;;;AAAnBK,cAAAA,U;AACAhB,cAAAA,M,GAASgB,UAAU,CAACH,IAAX,CAAgBI,Q;+CAEtB;AAAEpB,gBAAAA,OAAO,EAAPA,OAAF;AAAWE,gBAAAA,UAAU,EAAVA,UAAX;AAAuBC,gBAAAA,MAAM,EAANA;AAAvB,e;;;;;;;;;;;;EAnC0BR,S;;SAAhBK,O","sourcesContent":["import React, { Component } from \"react\";\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout\";\nimport ChannelGrid from \"../components/ChannelGrid\";\nimport PodcastList from \"../components/PodcastList\";\n\nexport default class channel extends Component {\n  static async getInitialProps({ query }) {\n    let idChannel = query.id;\n\n    // let reqChannel = await fetch(\n    //   `https://api.audioboom.com/channels/${idChannel}`\n    // );\n    // let dataChannel = await reqChannel.json();\n    // let channel = dataChannel.body.channel;\n    // let reqAudios = await fetch(\n    //   `https://api.audioboom.com/channels/${idChannel}/audio_clips`\n    // );\n    // let dataAudios = await reqAudios.json();\n    // let audioClips = dataAudios.body.audio_clips;\n    // let reqSeries = await fetch(\n    //   `https://api.audioboom.com/channels/${idChannel}/child_channels`\n    // );\n    // let dataSeries = await reqSeries.json();\n    // let series = dataSeries.body.channels;\n\n    let [reqChannel, reqSeries, reqAudios] = await Promise.all([\n      fetch(`https://api.audioboom.com/channels/${idChannel}`),\n      fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n      fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\n    ]);\n\n    let dataChannel = await reqChannel.json();\n    let channel = dataChannel.body.channel;\n\n    let dataAudios = await reqAudios.json();\n    let audioClips = dataAudios.body.audio_clips;\n\n    let dataSeries = await reqSeries.json();\n    let series = dataSeries.body.channels;\n\n    return { channel, audioClips, series };\n  }\n  render() {\n    const { channel, audioClips, series } = this.props;\n    return (\n      <Layout title={channel.title}>\n        <h1>{channel.title}</h1>\n        {series.length > 0 && (\n          <div>\n            <h2>Series</h2>\n            <ChannelGrid channels={series} />\n          </div>\n        )}\n        <h2>Ultimos Podcasts</h2>\n        <PodcastList audioClips={audioClips} />\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}