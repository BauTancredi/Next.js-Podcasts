{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport ChannelGrid from \"../components/ChannelGrid\";\nimport PodcastList from \"../components/PodcastList\";\nimport PodcastListWithClick from \"../components/PodcastListWithClick\";\nimport PodcastPlayer from \"../components/PodcastPlayer\";\nimport Error from \"./_error\";\nexport default class channel extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"openPodcast\", (event, podcast) => {\n      event.preventDefault();\n      this.setState({\n        openPodcast: podcast\n      });\n    });\n\n    this.state = {\n      openPodcast: null\n    };\n  }\n\n  static async getInitialProps({\n    query,\n    res\n  }) {\n    let idChannel = query.id;\n\n    try {\n      let [reqChannel, reqSeries, reqAudios] = await _Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)]);\n\n      if (reqChannel.status >= 400) {\n        res.statusCode = reqChannel.status;\n        return {\n          channel: null,\n          audioClips: null,\n          series: null,\n          statusCode: reqChannel.status\n        };\n      }\n\n      let dataChannel = await reqChannel.json();\n      let channel = dataChannel.body.channel;\n      let dataAudios = await reqAudios.json();\n      let audioClips = dataAudios.body.audio_clips;\n      let dataSeries = await reqSeries.json();\n      let series = dataSeries.body.channels;\n      return {\n        channel,\n        audioClips,\n        series,\n        statusCode: 200\n      };\n    } catch (e) {\n      return {\n        channel: null,\n        audioClips: null,\n        series: null,\n        statusCode: 503\n      };\n    } // let reqChannel = await fetch(\n    //   `https://api.audioboom.com/channels/${idChannel}`\n    // );\n    // let dataChannel = await reqChannel.json();\n    // let channel = dataChannel.body.channel;\n    // let reqAudios = await fetch(\n    //   `https://api.audioboom.com/channels/${idChannel}/audio_clips`\n    // );\n    // let dataAudios = await reqAudios.json();\n    // let audioClips = dataAudios.body.audio_clips;\n    // let reqSeries = await fetch(\n    //   `https://api.audioboom.com/channels/${idChannel}/child_channels`\n    // );\n    // let dataSeries = await reqSeries.json();\n    // let series = dataSeries.body.channels;\n\n  }\n\n  render() {\n    const {\n      channel,\n      audioClips,\n      series,\n      statusCode\n    } = this.props;\n    const {\n      openPodcast\n    } = this.state;\n\n    if (statusCode !== 200) {\n      return __jsx(Error, {\n        statusCode: statusCode\n      });\n    }\n\n    return __jsx(Layout, {\n      title: channel.title\n    }, openPodcast && __jsx(\"div\", {\n      className: \"jsx-1049804906\" + \" \" + \"modal\"\n    }, \"Hay un podcast abierto\"), __jsx(\"h1\", {\n      className: \"jsx-1049804906\"\n    }, channel.title), series.length > 0 && __jsx(\"div\", {\n      className: \"jsx-1049804906\"\n    }, __jsx(\"h2\", {\n      className: \"jsx-1049804906\"\n    }, \"Series\"), __jsx(ChannelGrid, {\n      channels: series\n    })), __jsx(\"h2\", {\n      className: \"jsx-1049804906\"\n    }, \"Ultimos Podcasts\"), __jsx(PodcastListWithClick, {\n      podcasts: audioClips,\n      onClickPodcast: this.openPodcast\n    }), __jsx(_JSXStyle, {\n      id: \"1049804906\"\n    }, \"h2.jsx-1049804906{padding:5px;font-size:0.9em;font-weight:600;margin:0;text-align:center;}.modal.jsx-1049804906{position:fixed;top:0;left:0;right:0;bottom:0;z-index:99999;background:black;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iYXV0aXN0YS9EZXNrdG9wL1BsYXR6aS9DYXJyZXJhLWRlLXJlYWN0L25leHQtanMvcGFnZXMvY2hhbm5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvR29CLEFBR3lCLEFBT0csWUFOQyxHQU9WLE1BQ0MsT0FQUyxBQVFSLFFBQ0MsUUFSQSxDQVNLLFFBUkksTUFTRCxZQVJuQixLQVNBIiwiZmlsZSI6Ii9Vc2Vycy9iYXV0aXN0YS9EZXNrdG9wL1BsYXR6aS9DYXJyZXJhLWRlLXJlYWN0L25leHQtanMvcGFnZXMvY2hhbm5lbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBMYXlvdXQgZnJvbSBcIi4uL2NvbXBvbmVudHMvTGF5b3V0XCI7XG5pbXBvcnQgQ2hhbm5lbEdyaWQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2hhbm5lbEdyaWRcIjtcbmltcG9ydCBQb2RjYXN0TGlzdCBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb2RjYXN0TGlzdFwiO1xuaW1wb3J0IFBvZGNhc3RMaXN0V2l0aENsaWNrIGZyb20gXCIuLi9jb21wb25lbnRzL1BvZGNhc3RMaXN0V2l0aENsaWNrXCI7XG5pbXBvcnQgUG9kY2FzdFBsYXllciBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb2RjYXN0UGxheWVyXCI7XG5pbXBvcnQgRXJyb3IgZnJvbSBcIi4vX2Vycm9yXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGNoYW5uZWwgZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLnN0YXRlID0geyBvcGVuUG9kY2FzdDogbnVsbCB9O1xuICB9XG5cbiAgc3RhdGljIGFzeW5jIGdldEluaXRpYWxQcm9wcyh7IHF1ZXJ5LCByZXMgfSkge1xuICAgIGxldCBpZENoYW5uZWwgPSBxdWVyeS5pZDtcbiAgICB0cnkge1xuICAgICAgbGV0IFtyZXFDaGFubmVsLCByZXFTZXJpZXMsIHJlcUF1ZGlvc10gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfWApLFxuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vY2hpbGRfY2hhbm5lbHNgKSxcbiAgICAgICAgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9L2F1ZGlvX2NsaXBzYClcbiAgICAgIF0pO1xuXG4gICAgICBpZiAocmVxQ2hhbm5lbC5zdGF0dXMgPj0gNDAwKSB7XG4gICAgICAgIHJlcy5zdGF0dXNDb2RlID0gcmVxQ2hhbm5lbC5zdGF0dXM7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgY2hhbm5lbDogbnVsbCxcbiAgICAgICAgICBhdWRpb0NsaXBzOiBudWxsLFxuICAgICAgICAgIHNlcmllczogbnVsbCxcbiAgICAgICAgICBzdGF0dXNDb2RlOiByZXFDaGFubmVsLnN0YXR1c1xuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBsZXQgZGF0YUNoYW5uZWwgPSBhd2FpdCByZXFDaGFubmVsLmpzb24oKTtcbiAgICAgIGxldCBjaGFubmVsID0gZGF0YUNoYW5uZWwuYm9keS5jaGFubmVsO1xuXG4gICAgICBsZXQgZGF0YUF1ZGlvcyA9IGF3YWl0IHJlcUF1ZGlvcy5qc29uKCk7XG4gICAgICBsZXQgYXVkaW9DbGlwcyA9IGRhdGFBdWRpb3MuYm9keS5hdWRpb19jbGlwcztcblxuICAgICAgbGV0IGRhdGFTZXJpZXMgPSBhd2FpdCByZXFTZXJpZXMuanNvbigpO1xuICAgICAgbGV0IHNlcmllcyA9IGRhdGFTZXJpZXMuYm9keS5jaGFubmVscztcblxuICAgICAgcmV0dXJuIHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzLCBzdGF0dXNDb2RlOiAyMDAgfTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBjaGFubmVsOiBudWxsLFxuICAgICAgICBhdWRpb0NsaXBzOiBudWxsLFxuICAgICAgICBzZXJpZXM6IG51bGwsXG4gICAgICAgIHN0YXR1c0NvZGU6IDUwM1xuICAgICAgfTtcbiAgICB9XG4gICAgLy8gbGV0IHJlcUNoYW5uZWwgPSBhd2FpdCBmZXRjaChcbiAgICAvLyAgIGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfWBcbiAgICAvLyApO1xuICAgIC8vIGxldCBkYXRhQ2hhbm5lbCA9IGF3YWl0IHJlcUNoYW5uZWwuanNvbigpO1xuICAgIC8vIGxldCBjaGFubmVsID0gZGF0YUNoYW5uZWwuYm9keS5jaGFubmVsO1xuICAgIC8vIGxldCByZXFBdWRpb3MgPSBhd2FpdCBmZXRjaChcbiAgICAvLyAgIGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9hdWRpb19jbGlwc2BcbiAgICAvLyApO1xuICAgIC8vIGxldCBkYXRhQXVkaW9zID0gYXdhaXQgcmVxQXVkaW9zLmpzb24oKTtcbiAgICAvLyBsZXQgYXVkaW9DbGlwcyA9IGRhdGFBdWRpb3MuYm9keS5hdWRpb19jbGlwcztcbiAgICAvLyBsZXQgcmVxU2VyaWVzID0gYXdhaXQgZmV0Y2goXG4gICAgLy8gICBgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vY2hpbGRfY2hhbm5lbHNgXG4gICAgLy8gKTtcbiAgICAvLyBsZXQgZGF0YVNlcmllcyA9IGF3YWl0IHJlcVNlcmllcy5qc29uKCk7XG4gICAgLy8gbGV0IHNlcmllcyA9IGRhdGFTZXJpZXMuYm9keS5jaGFubmVscztcbiAgfVxuXG4gIG9wZW5Qb2RjYXN0ID0gKGV2ZW50LCBwb2RjYXN0KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLnNldFN0YXRlKHsgb3BlblBvZGNhc3Q6IHBvZGNhc3QgfSk7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzLCBzdGF0dXNDb2RlIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHsgb3BlblBvZGNhc3QgfSA9IHRoaXMuc3RhdGU7XG5cbiAgICBpZiAoc3RhdHVzQ29kZSAhPT0gMjAwKSB7XG4gICAgICByZXR1cm4gPEVycm9yIHN0YXR1c0NvZGU9e3N0YXR1c0NvZGV9IC8+O1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8TGF5b3V0IHRpdGxlPXtjaGFubmVsLnRpdGxlfT5cbiAgICAgICAge29wZW5Qb2RjYXN0ICYmIDxkaXYgY2xhc3NOYW1lPVwibW9kYWxcIj5IYXkgdW4gcG9kY2FzdCBhYmllcnRvPC9kaXY+fVxuICAgICAgICA8aDE+e2NoYW5uZWwudGl0bGV9PC9oMT5cblxuICAgICAgICB7c2VyaWVzLmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICA8aDI+U2VyaWVzPC9oMj5cbiAgICAgICAgICAgIDxDaGFubmVsR3JpZCBjaGFubmVscz17c2VyaWVzfSAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuXG4gICAgICAgIDxoMj5VbHRpbW9zIFBvZGNhc3RzPC9oMj5cbiAgICAgICAgey8qIDxQb2RjYXN0TGlzdCBhdWRpb0NsaXBzPXthdWRpb0NsaXBzfSAvPiAqL31cbiAgICAgICAgPFBvZGNhc3RMaXN0V2l0aENsaWNrXG4gICAgICAgICAgcG9kY2FzdHM9e2F1ZGlvQ2xpcHN9XG4gICAgICAgICAgb25DbGlja1BvZGNhc3Q9e3RoaXMub3BlblBvZGNhc3R9XG4gICAgICAgIC8+XG5cbiAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgIGgyIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMC45ZW07XG4gICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIH1cbiAgICAgICAgICAubW9kYWwge1xuICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICAgICAgei1pbmRleDogOTk5OTk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiBibGFjaztcbiAgICAgICAgICB9XG4gICAgICAgIGB9PC9zdHlsZT5cbiAgICAgIDwvTGF5b3V0PlxuICAgICk7XG4gIH1cbn1cbiJdfQ== */\\n/*@ sourceURL=/Users/bautista/Desktop/Platzi/Carrera-de-react/next-js/pages/channel.js */\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/bautista/Desktop/Platzi/Carrera-de-react/next-js/pages/channel.js"],"names":["React","Component","Layout","ChannelGrid","PodcastList","PodcastListWithClick","PodcastPlayer","Error","channel","constructor","props","event","podcast","preventDefault","setState","openPodcast","state","getInitialProps","query","res","idChannel","id","reqChannel","reqSeries","reqAudios","all","fetch","status","statusCode","audioClips","series","dataChannel","json","body","dataAudios","audio_clips","dataSeries","channels","e","render","title","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport ChannelGrid from \"../components/ChannelGrid\";\nimport PodcastList from \"../components/PodcastList\";\nimport PodcastListWithClick from \"../components/PodcastListWithClick\";\nimport PodcastPlayer from \"../components/PodcastPlayer\";\nimport Error from \"./_error\";\n\nexport default class channel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { openPodcast: null };\n  }\n\n  static async getInitialProps({ query, res }) {\n    let idChannel = query.id;\n    try {\n      let [reqChannel, reqSeries, reqAudios] = await Promise.all([\n        fetch(`https://api.audioboom.com/channels/${idChannel}`),\n        fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n        fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\n      ]);\n\n      if (reqChannel.status >= 400) {\n        res.statusCode = reqChannel.status;\n        return {\n          channel: null,\n          audioClips: null,\n          series: null,\n          statusCode: reqChannel.status\n        };\n      }\n\n      let dataChannel = await reqChannel.json();\n      let channel = dataChannel.body.channel;\n\n      let dataAudios = await reqAudios.json();\n      let audioClips = dataAudios.body.audio_clips;\n\n      let dataSeries = await reqSeries.json();\n      let series = dataSeries.body.channels;\n\n      return { channel, audioClips, series, statusCode: 200 };\n    } catch (e) {\n      return {\n        channel: null,\n        audioClips: null,\n        series: null,\n        statusCode: 503\n      };\n    }\n    // let reqChannel = await fetch(\n    //   `https://api.audioboom.com/channels/${idChannel}`\n    // );\n    // let dataChannel = await reqChannel.json();\n    // let channel = dataChannel.body.channel;\n    // let reqAudios = await fetch(\n    //   `https://api.audioboom.com/channels/${idChannel}/audio_clips`\n    // );\n    // let dataAudios = await reqAudios.json();\n    // let audioClips = dataAudios.body.audio_clips;\n    // let reqSeries = await fetch(\n    //   `https://api.audioboom.com/channels/${idChannel}/child_channels`\n    // );\n    // let dataSeries = await reqSeries.json();\n    // let series = dataSeries.body.channels;\n  }\n\n  openPodcast = (event, podcast) => {\n    event.preventDefault();\n    this.setState({ openPodcast: podcast });\n  };\n\n  render() {\n    const { channel, audioClips, series, statusCode } = this.props;\n    const { openPodcast } = this.state;\n\n    if (statusCode !== 200) {\n      return <Error statusCode={statusCode} />;\n    }\n\n    return (\n      <Layout title={channel.title}>\n        {openPodcast && <div className=\"modal\">Hay un podcast abierto</div>}\n        <h1>{channel.title}</h1>\n\n        {series.length > 0 && (\n          <div>\n            <h2>Series</h2>\n            <ChannelGrid channels={series} />\n          </div>\n        )}\n\n        <h2>Ultimos Podcasts</h2>\n        {/* <PodcastList audioClips={audioClips} /> */}\n        <PodcastListWithClick\n          podcasts={audioClips}\n          onClickPodcast={this.openPodcast}\n        />\n\n        <style jsx>{`\n          h2 {\n            padding: 5px;\n            font-size: 0.9em;\n            font-weight: 600;\n            margin: 0;\n            text-align: center;\n          }\n          .modal {\n            position: fixed;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            z-index: 99999;\n            background: black;\n          }\n        `}</style>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}